
plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}


def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}


// 本地编译注释以下代码
// start
def keystorePropertiesFile = rootProject.file('key.properties')
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
// end
android {
    compileSdkVersion 34
    // ndkVersion "21.1.6352462"
    //     externalNativeBuild {
    // //            ndkBuild {
    // //                path 'jni/Android.mk'
    // //            }
    //         cmake {
    //             version "3.22.1"
    //         }
    //     }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        // 本地编译注释以下代码
        // start
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        // end
    }
    defaultConfig {
        applicationId 'com.nightmare.code'
        minSdkVersion 24
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
        }
        debug {
            signingConfig signingConfigs.release
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    project.android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.versionCodeOverride = flutterVersionCode.toInteger()
        }
    }
}

flutter {
    source '../..'
}
dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // implementation fileTree(include: ['*.jar', '*aar'], dir: 'libs')
}
